recorder:
  include:
    #    entity_globs:
    #      - sensor.fronius_*
    entities:
      #      - sensor.efergy_2577

      - sensor.fronius_smartmeter_energy_real_produced
      - sensor.fronius_smartmeter_energy_real_produced_compensation
      - sensor.fronius_inverter_energy_total
      - sensor.fronius_solarnet_power_grid

      - sensor.energy_power_photovoltaics
      - sensor.energy_power_house
      - sensor.energy_net_balance_hour
      - sensor.energy_net_balance

      - sensor.salon_switch_power
      - sensor.salon_switch_energy

      - sensor.comedor_switch_power
      - sensor.comedor_switch_energy

      - sensor.suite_switch_power
      - sensor.suite_switch_energy

      - sensor.escalera_switch_power
      - sensor.escalera_switch_energy

      - sensor.piscina_power
      - sensor.piscina_energy

      - climate.recibidor

      - sensor.co2_intensity
      - sensor.grid_fossil_fuel_percentage

logbook:
  exclude:
    #    entities:
    #      - sensor.efergy_2577
    entity_globs:
      - sensor.fronius_*
sensor:
  - platform: template
    sensors:
      # The raw Fronius photovoltaic state goes to unknown after dark, so force it to zero
      energy_power_photovoltaics:
        device_class: power
        friendly_name: "Producción fotovoltáica"
        unit_of_measurement: "W"
        value_template: "{{ states('sensor.fronius_solarnet_power_photovoltaics')|float(0) }}"

      # Total home instant power
      energy_power_house:
        device_class: power
        friendly_name: "Potencia casa"
        unit_of_measurement: "W"
        value_template: "{{ 0 - states('sensor.fronius_solarnet_power_load')|float(0)|round(1) }}"

      # The raw grid power is negative if exporting and positive if importing,
      # so produce separate figures here so we can calculate energy based on them below
#      energy_power_grid_import:
#        device_class: power
#        friendly_name: "Potencia red"
#        unit_of_measurement: "W"
#        value_template: "{{ [states('sensor.fronius_solarnet_power_grid')|float, 0]|max }}"
#
#      energy_power_grid_export:
#        device_class: power
#        friendly_name: "Potencia vertida"
#        unit_of_measurement: "W"
#        value_template: "{{ [states('sensor.fronius_solarnet_power_grid')|float, 0]|min }}"

utility_meter:
  energy_grid_today:
    unique_id: energy_grid_today
    source: sensor.fronius_smartmeter_energy_real_consumed
    cycle: daily
    tariffs:
      - Punta
      - Llana
      - Valle
      - Super-valle
