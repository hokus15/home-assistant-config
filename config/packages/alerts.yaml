recorder:
  include:
    entities:
      - binary_sensor.solar_panel_not_producing_monitor_alert
      - binary_sensor.porche_sensor_puerta_abierta_alerta
      - binary_sensor.coladuria_sensor_puerta_abierta_alerta
      - binary_sensor.entrada_sensor_puerta_abierta_alerta
      - binary_sensor.motor_piscina_encendido_alerta
      - binary_sensor.swimming_pool_circuit_breaker_alert
      - binary_sensor.car_ioniq_iotconnect_monitor_alert
      - binary_sensor.car_ioniq_iotconnect_ev_battery_monitor_alert
      - binary_sensor.car_ioniq_iotconnect_ev_odometer_monitor_alert
      - binary_sensor.car_ioniq_iotconnect_ev_tpms_monitor_alert
      - binary_sensor.car_ioniq_iotconnect_gps_location_monitor_alert

template:
  - binary_sensor:
      - name: "solar_panel_not_producing_monitor_alert"
        # Introducir azimuth?
        # Tener en cuenta si hace sol o está nublado?
        state: >-
          {{ state_attr('sun.sun', 'elevation') > 6
             and states('sensor.energy_power_photovoltaics') <= 0 }}

      - name: "porche_sensor_puerta_abierta_alerta"
        state: >-
          {{ is_state('binary_sensor.porche_sensor_puerta', 'on')
             and states('climate.recibidor') is not none
             and not is_state('climate.recibidor', 'off')
             and is_state_attr('climate.recibidor', 'hvac_action', 'heating') }}

      - name: "coladuria_sensor_puerta_abierta_alerta"
        state: >-
          {{ is_state('binary_sensor.coladuria_sensor_puerta', 'on')
             and states('climate.recibidor') is not none
             and not is_state('climate.recibidor', 'off')
             and is_state_attr('climate.recibidor', 'hvac_action', 'heating') }}

      - name: "entrada_sensor_puerta_abierta_alerta"
        state: >-
          {{ is_state('binary_sensor.entrada_sensor_puerta', 'on')
             and states('climate.recibidor') is not none
             and not is_state('climate.recibidor', 'off')
             and is_state_attr('climate.recibidor', 'hvac_action', 'heating') }}

      - name: "swimming_pool_circuit_breaker_alert"
        state: >-
          {{  is_state('binary_sensor.energy_home_status', 'on')
             and is_state('switch.motor_piscina', 'unavailable')
             and is_state('switch.luz_piscina', 'unavailable')
             and is_state('switch.piscina', 'unavailable')}}

      - name: "motor_piscina_encendido_alerta"
        state: >-
          {{ is_state('switch.motor_piscina', 'on')
             and states.sensor.piscina_on_history.state | float(0) > states.sensor.piscina_filtering_time.state | float(0) }}

      - name: "car_ioniq_iotconnect_monitor_alert"
        # If car_ioniq_iotconnect_monitor is off
        # and hokusphone is in car IONIQ (see binary_sensor.hokusphone_in_car_ioniq in phones.yaml)
        state: >-
          {{ is_state("binary_sensor.car_ioniq_iotconnect_monitor", "off")
             and is_state("binary_sensor.hokusphone_in_car_ioniq", "on") }}

      - name: "car_ioniq_iotconnect_ev_battery_monitor_alert"
        # If binary_sensor.car_ioniq_iotconnect_ev_monitor is off or car_ioniq_iotconnect_ev_battery_monitor is off
        # and hokusphone is in car IONIQ (see binary_sensor.hokusphone_in_car_ioniq in phones.yaml)
        state: >-
          {{ (is_state("binary_sensor.car_ioniq_iotconnect_ev_monitor", "off")
              or is_state("binary_sensor.car_ioniq_iotconnect_ev_battery_monitor", "off"))
             and is_state("binary_sensor.hokusphone_in_car_ioniq", "on") }}

      - name: "car_ioniq_iotconnect_ev_odometer_monitor_alert"
        # If binary_sensor.car_ioniq_iotconnect_ev_monitor is off or car_ioniq_iotconnect_ev_odometer_monitor is off
        # and hokusphone is in car IONIQ (see binary_sensor.hokusphone_in_car_ioniq in phones.yaml)
        state: >-
          {{ (is_state("binary_sensor.car_ioniq_iotconnect_ev_monitor", "off")
              or is_state("binary_sensor.car_ioniq_iotconnect_ev_odometer_monitor", "off"))
             and is_state("binary_sensor.hokusphone_in_car_ioniq", "on") }}

      - name: "car_ioniq_iotconnect_ev_tpms_monitor_alert"
        # If binary_sensor.car_ioniq_iotconnect_ev_monitor is off or car_ioniq_iotconnect_ev_tpms_monitor is off
        # and hokusphone is in car IONIQ (see binary_sensor.hokusphone_in_car_ioniq in phones.yaml)
        state: >-
          {{ (is_state("binary_sensor.car_ioniq_iotconnect_ev_tpms_monitor", "off"))
             and is_state("binary_sensor.hokusphone_in_car_ioniq", "on") }}

      - name: "car_ioniq_iotconnect_gps_location_monitor_alert"
        # If car_ioniq_location_sensor is off or binary_sensor.car_ioniq_gps_monitor is off
        # and hokusphone is in car IONIQ (see binary_sensor.hokusphone_in_car_ioniq in phones.yaml)
        state: >-
          {{ (is_state("binary_sensor.car_ioniq_location_sensor", "off")
             or is_state("binary_sensor.car_ioniq_iotconnect_gps_monitor", "off"))
             and is_state("binary_sensor.hokusphone_in_car_ioniq", "on") }}

alert:
  barrera_abierta:
    name: Barrera abierta
    entity_id: cover.outside_fence
    state: "open"
    repeat: 10
    message: "Barrera {{ states.sensor.outside_fence_sensor_state.state }} durante más de {{ (as_timestamp(now()) - as_timestamp(states.cover.outside_fence.last_changed))|int//60 }} minutos."
    can_acknowledge: true
    skip_first: true
    data:
      inline_keyboard:
        - "Cerrar:/switch.turn_on#switch.barrera"
        - "Enterado:/alert.turn_off#alert.barrera_abierta"
    notifiers:
      - recibidor
      - telegram_hokusphone

  porche_sensor_puerta_abierta:
    name: Puerta porche cocina abierta
    entity_id: binary_sensor.porche_sensor_puerta_abierta_alerta
    state: "on"
    repeat: 10
    message: "La puerta del porche en la cocina lleva más de {{ (as_timestamp(now()) - as_timestamp(states.binary_sensor.porche_sensor_puerta.last_changed))|int//60 }} minutos abierta y la calefacción está encendida."
    can_acknowledge: true
    skip_first: true
    data:
      inline_keyboard:
        - "Enterado:/alert.turn_off#alert.porche_sensor_puerta_abierta"
    notifiers:
      - recibidor
      - suite
      - telegram_hokusphone

  coladuria_sensor_puerta_abierta:
    name: Puerta coladuría abierta
    entity_id: binary_sensor.coladuria_sensor_puerta_abierta_alerta
    state: "on"
    repeat: 10
    message: "La puerta de la coladuría lleva más de {{ (as_timestamp(now()) - as_timestamp(states.binary_sensor.coladuria_sensor_puerta.last_changed))|int//60 }} minutos abierta y la calefacción está encendida."
    can_acknowledge: true
    skip_first: true
    data:
      inline_keyboard:
        - "Enterado:/alert.turn_off#alert.coladuria_sensor_puerta_abierta"
    notifiers:
      - recibidor
      - suite
      - telegram_hokusphone

  entrada_sensor_puerta_abierta:
    name: Puerta de entrada abierta
    entity_id: binary_sensor.entrada_sensor_puerta_abierta_alerta
    state: "on"
    repeat: 10
    message: "La puerta de entrada lleva más de {{ (as_timestamp(now()) - as_timestamp(states.binary_sensor.porche_sensor_puerta.last_changed))|int//60 }} minutos abierta y la calefacción está encendida."
    can_acknowledge: true
    skip_first: true
    data:
      inline_keyboard:
        - "Enterado:/alert.turn_off#alert.entrada_sensor_puerta_abierta"
    notifiers:
      - recibidor
      - suite
      - telegram_hokusphone

  motor_piscina_encendido:
    name: Motor piscina encendido
    entity_id: binary_sensor.motor_piscina_encendido_alerta
    state: "on"
    repeat: 5
    message: "Motor de la piscina encendido hoy durante {{ ((states.sensor.piscina_on_history.state | float(0) * 60) // 60) | round(0) }} horas y {{ ((states.sensor.piscina_on_history.state | float(0) * 60) % 60) | round(0) }} minutos cuando el tiempo programado es de {{ ((states.sensor.piscina_filtering_time.state | float(0) * 60) // 60) | round(0) }} horas y {{ ((states.sensor.piscina_filtering_time.state | float(0) * 60) % 60) | round(0) }} minutos."
    can_acknowledge: true
    skip_first: true
    data:
      inline_keyboard:
        - "Apagar:/switch.turn_off#switch.motor_piscina"
        - "Enterado:/alert.turn_off#alert.motor_piscina_encendido"
    notifiers:
      - recibidor
      - telegram_hokusphone

  car_ioniq_iotconnect_monitor_alert:
    name: IOTConnect monitor
    entity_id: binary_sensor.car_ioniq_iotconnect_monitor_alert
    state: "on"
    repeat: 3
    message: "IOTConnect está parado."
    done_message: >-
      {% if is_state("binary_sensor.hokusphone_android_auto", "on") %}
        IOTConnect está activo.
      {% else %}
        clear_notification
      {% endif %}
    can_acknowledge: true
    skip_first: true
    data:
      group: "IOTConnect"
      tag: iotconnect-app
      car_ui: true
      #notification_icon: "{{ 'mdi:car-connected' if is_state('alert.car_ioniq_iotconnect_monitor_alert', 'idle') else 'mdi:car-off' }}"
      # TODO Probar asi, si no probar con el estado del binary_sensor binary_sensor.car_ioniq_iotconnect_monitor_alert
      notification_icon: >-
        {% if is_state("binary_sensor.car_ioniq_iotconnect_monitor_alert", "off") %}
          mdi:car-connected
        {% else %}
          mdi:car-off
        {% endif %}

      #notification_icon: "mdi:car-off"
      channel: "Ioniq"
      importance: high
    notifiers:
      - mobile_app_hokusphone

  car_ioniq_iotconnect_ev_battery_monitor_alert:
    name: IOTConnect battery monitor
    entity_id: binary_sensor.car_ioniq_iotconnect_ev_battery_monitor_alert
    state: "on"
    repeat: 3
    message: "Batería: IOTConnect NO está publicando datos."
    done_message: >-
      {% if is_state("binary_sensor.hokusphone_android_auto", "on") %}
        Batería: IOTConnect ya publica datos.
      {% else %}
        clear_notification
      {% endif %}
    can_acknowledge: true
    skip_first: true
    data:
      group: "IOTConnect"
      tag: iotconnect-battery
      car_ui: true
      #notification_icon: "{{ 'mdi:battery-charging-wireless' if is_state('alert.car_ioniq_iotconnect_monitor_alert', 'idle') else 'mdi:battery-charging-wireless-alert' }}"
      notification_icon: "mdi:battery-charging-wireless-alert"
      channel: "Ioniq"
      importance: high
    notifiers:
      - mobile_app_hokusphone

  car_ioniq_iotconnect_ev_odometer_monitor_alert:
    name: IOTConnect odometer monitor
    entity_id: binary_sensor.car_ioniq_iotconnect_ev_odometer_monitor_alert
    state: "on"
    repeat: 3
    message: "Odómetro: IOTConnect NO está publicando datos."
    done_message: >-
      {% if is_state("binary_sensor.hokusphone_android_auto", "on") %}
        Odómetro: IOTConnect ya publica datos.
      {% else %}
        clear_notification
      {% endif %}
    can_acknowledge: true
    skip_first: true
    data:
      group: "IOTConnect"
      tag: iotconnect-odometer
      car_ui: true
      #notification_icon: "{{ 'mdi:map-marker-distance' if is_state('alert.car_ioniq_iotconnect_monitor_alert', 'idle') else 'mdi:timeline-question' }}"
      notification_icon: "mdi:timeline-question"
      channel: "Ioniq"
      importance: high
    notifiers:
      - mobile_app_hokusphone

  car_ioniq_iotconnect_ev_tpms_monitor_alert:
    name: IOTConnect TPMS monitor
    entity_id: binary_sensor.car_ioniq_iotconnect_ev_tpms_monitor_alert
    state: "on"
    repeat: 3
    message: "TPMS: IOTConnect NO está publicando datos."
    done_message: >-
      {% if is_state("binary_sensor.hokusphone_android_auto", "on") %}
        TPMS: IOTConnect ya publica datos.
      {% else %}
        clear_notification
      {% endif %}
    can_acknowledge: true
    skip_first: true
    data:
      group: "IOTConnect"
      tag: iotconnect-odometer
      car_ui: true
      #notification_icon: "{{ 'mdi:tire' if is_state('alert.car_ioniq_iotconnect_monitor_alert', 'idle') else 'mdi:car-tire-alert' }}"
      notification_icon: "mdi:car-tire-alert"
      channel: "Ioniq"
      importance: high
    notifiers:
      - mobile_app_hokusphone

  car_ioniq_iotconnect_gps_location_monitor_alert:
    name: IOTConnect location monitor
    entity_id: binary_sensor.car_ioniq_iotconnect_gps_location_monitor_alert
    state: "on"
    repeat: 3
    message: "Posición: IOTConnect NO está publicando datos."
    done_message: >-
      {% if is_state("binary_sensor.hokusphone_android_auto", "on") %}
        Posisicón: IOTConnect ya publica datos.
      {% else %}
        clear_notification
      {% endif %}
    can_acknowledge: true
    skip_first: true
    data:
      group: "IOTConnect"
      tag: iotconnect-location
      car_ui: true
      #notification_icon: "{{ 'mdi:crosshairs-gps' if is_state('alert.car_ioniq_iotconnect_monitor_alert', 'idle') else 'mdi:crosshairs-question' }}"
      notification_icon: "mdi:crosshairs-question"
      channel: "Ioniq"
      importance: high
    notifiers:
      - mobile_app_hokusphone

  sp_cb_monitor_alert:
    # swimming_pool_circuit_breaker_monitor_alert -> sp_cb_monitor_alert
    # -> Cambio en el nombre para poder evitar llegar al máximo de carácteres en el inline keyboard de Telegram
    name: Magnetotermico piscina abajo
    entity_id: binary_sensor.swimming_pool_circuit_breaker_alert
    state: "on"
    repeat: 5
    message: "Es posible que haya saltado el magnetotérmico de la piscina. Los dispositivos afectados son: piscina (luz y depuradora), cámara de la caseta, cámara de la piscina y cámara de la barbacoa."
    can_acknowledge: true
    skip_first: false
    data:
      inline_keyboard:
        - "Enterado:/alert.turn_off#alert.sp_cb_monitor_alert"
    notifiers:
      - telegram_hokusphone

  sp_not_producing_monitor_alert:
    # solar_panel_not_producing_monitor_alert -> sp_not_producing_monitor_alert
    # -> Cambio en el nombre para poder evitar llegar al máximo de carácteres en el inline keyboard de Telegram
    name: Producción electricidad
    entity_id: binary_sensor.solar_panel_not_producing_monitor_alert
    state: "on"
    repeat: 5
    message: "Las placas solares no están produciendo electricidad. ¿Está muy nublado?"
    can_acknowledge: true
    skip_first: false
    data:
      inline_keyboard:
        - "Enterado:/alert.turn_off#alert.sp_not_producing_monitor_alert"
    notifiers:
      - telegram_hokusphone
