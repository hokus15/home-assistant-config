recorder:
  include:
    entities:
      - switch.motor_piscina
      - sensor.piscina_water_temperature
      - sensor.piscina_temperature
      - sensor.piscina_filtering_time
      - sensor.piscina_today_cost
      - sensor.piscina_month_cost

      - input_boolean.piscina_should_be_on

logbook:
  exclude:
    entities:
      - sensor.piscina_water_temperature
      - sensor.piscina_temperature
      - sensor.piscina_filtering_time

light:
  - platform: switch
    name: piscina_light
    entity_id: switch.luz_piscina

switch:
  - platform: mqtt
    name: "Motor piscina"
    icon: mdi:pool
    state_topic: "home/switch/motor_piscina/stat/POWER"
    command_topic: "home/switch/motor_piscina/cmnd/POWER"
    availability_topic: "home/switch/motor_piscina/tele/LWT"
    payload_available: "Online"
    payload_not_available: "Offline"
    payload_off: "OFF"
    payload_on: "ON"
    retain: false

  - platform: mqtt
    name: "Luz Piscina"
    icon: 'mdi:lightbulb'
    state_topic: "home/light/piscina/stat/POWER"
    command_topic: "home/light/piscina/cmnd/POWER"
    availability_topic: "home/light/piscina/tele/LWT"
    payload_available: "Online"
    payload_not_available: "Offline"
    payload_off: "OFF"
    payload_on: "ON"
    retain: false

sensor:
  - platform: template
    sensors:
      piscina_width:
        friendly_name: 'Ancho'
        value_template: 3.5
        unit_of_measurement: m
      piscina_height:
        friendly_name: 'Largo'
        value_template: 7
        unit_of_measurement: m
      piscina_average_depth:
        friendly_name: 'Profundidad media'
        value_template: 1.6
        unit_of_measurement: m
      piscina_pump_power:
        friendly_name: 'Potencia'
        value_template: 16
        unit_of_measurement: 'm3/h'
      piscina_pump_efficiency:
        friendly_name: 'Eficiencia'
        value_template: 0.8
      piscina_capacity:
        friendly_name: 'Capacidad'
        value_template: >-
          {%if states.sensor.ha_runtime_in_minutes.state|float > 2 %}
          {%- if states.sensor.piscina_width and states.sensor.piscina_height and states.sensor.piscina_average_depth %}
          {{ states.sensor.piscina_width.state | float * states.sensor.piscina_height.state | float * states.sensor.piscina_average_depth.state | float}}
          {%- endif %}
          {% else %}Calculando...{%- endif %}
        unit_of_measurement: 'm3'
      piscina_recirculation:
        friendly_name: 'Recirculación'
        value_template: >-
          {%if states.sensor.ha_runtime_in_minutes.state|float > 2 %}
          {%- if states.sensor.piscina_capacity and states.sensor.piscina_pump_power and states.sensor.piscina_pump_efficiency %}
          {{ (states.sensor.piscina_capacity.state | float / (states.sensor.piscina_pump_power.state | float * states.sensor.piscina_pump_efficiency.state | float )) | round(1) }}
          {%- endif %}
          {% else %}Calculando...{%- endif %}
        unit_of_measurement: 'h'
      piscina_k_factor:
        friendly_name: 'Factor reduccion (K)'
        value_template: >-
          {%if states.sensor.ha_runtime_in_minutes.state|float > 2 %}
          {%- if states.sensor.piscina_temperature.state | float > 15 %}
            1
          {% elif states.sensor.piscina_temperature.state | float <= 15 and states.sensor.piscina_temperature.state | float > 13 %}
            0.5
          {% elif states.sensor.piscina_temperature.state | float <= 13 and states.sensor.piscina_temperature.state | float > 10 %}
            0.33
          {% elif states.sensor.piscina_temperature.state | float <= 10 and states.sensor.piscina_temperature.state | float > 5 %}
            0.25
          {% elif states.sensor.piscina_temperature.state | float <= 5 %}
            0.15
          {%- endif %}
          {% else %}Calculando...{%- endif %}
        icon_template: 'mdi:arrow-down-bold'
      piscina_filtering_time:
        friendly_name: 'Tiempo de filtrado'
        value_template: >- 
          {%if states.sensor.ha_runtime_in_minutes.state|float > 2 %}
          {% set filtering_time = (states.sensor.piscina_k_factor.state | float * ((states.sensor.piscina_temperature.state | float / 10) * states.sensor.piscina_recirculation.state | float )) | float | round(2)%}
          {%- if filtering_time < 2 %}
            {{ 2 | float }}
          {% elif filtering_time > 8 %}
            {{ 8 | float }}
          {% else %}
            {{ filtering_time }}
          {%- endif %}
          {% else %}Calculando...{%- endif %}
        unit_of_measurement: 'h'
        icon_template: 'mdi:clock'
      piscina_off_time:
        friendly_name: 'Apagado'
        value_template: >- 
          {{ as_timestamp(strptime(states.sensor.date_time.state, "%Y-%m-%d, %H:%M").replace(hour=7).replace(minute=0).replace(second=0))|timestamp_custom("%Y-%m-%d, %H:%M") }}
#          {%- if is_state('binary_sensor.summer_time', 'on') %}
#            {{ as_timestamp(strptime(states.sensor.date_time.state, "%Y-%m-%d, %H:%M").replace(hour=13).replace(minute=0).replace(second=0))|timestamp_custom("%Y-%m-%d, %H:%M") }}
#          {% else %}
#            {{ as_timestamp(strptime(states.sensor.date_time.state, "%Y-%m-%d, %H:%M").replace(hour=12).replace(minute=0).replace(second=0))|timestamp_custom("%Y-%m-%d, %H:%M") }}
#          {%- endif %}
        icon_template: 'mdi:power-plug-off'
      piscina_on_time:
        friendly_name: 'Encendido'
        # The time round to the minute
        value_template: >-
          {%- if states.sensor.piscina_off_time %}
            {{(((as_timestamp(strptime(states.sensor.piscina_off_time.state, "%Y-%m-%d, %H:%M"))-(states.sensor.piscina_filtering_time.state | float * 60 * 60)) // 60) * 60)|timestamp_custom("%Y-%m-%d, %H:%M")}}
          {%- endif %}
        icon_template: 'mdi:power-plug'
      piscina_hour_cost:
        friendly_name: Coste depuración hora actual
        value_template: '{{ states("sensor.piscina_hour_energy") | float * states("sensor.energy_price") | float }}'
        unit_of_measurement: '€'
        icon_template: hass:currency-eur

  - platform: statistics
    name: piscina_temperature
    #entity_id: input_number.piscina_temperature
    entity_id: sensor.piscina_water_temperature
    sampling_size: 1440
    max_age:
      hours: 24
  
  # Use of the swimming pool pump today
  - platform: history_stats
    name: piscina_on_history
    entity_id: switch.motor_piscina
    state: 'on'
    start: '{{ now().replace(hour=0).replace(minute=0).replace(second=0) }}'
    end: '{{ now() }}'

  - platform: mqtt
    name: piscina_water_temperature
    state_topic: "home/switch/motor_piscina/tele/SENSOR"
    value_template: "{{ value_json.DS18B20.Temperature | float + states.input_number.temperature_correction.state | float }}"
    unit_of_measurement: "ºC"

input_number:
  temperature_correction:
    name: 'Corrección temp.'
    unit_of_measurement: 'ºC'
    icon: 'mdi:thermometer-lines'
    min: -5
    max: 5
    step: 0.5
    mode: box
  piscina_pump_on_trigger:
    name: 'Potencia encendido'
    unit_of_measurement: 'W'
    icon: 'mdi:lightning-bolt'
    initial: 1700
    min: 1200
    max: 2500
    step: 100
  piscina_pump_off_trigger:
    name: 'Potencia apagado'
    unit_of_measurement: 'W'
    icon: 'mdi:lightning-bolt'
    initial: 1200
    min: 1000
    max: 2000
    step: 100

input_boolean:
  piscina_should_be_on:
    name: Test boolean for piscina pump on

utility_meter:
  piscina_today_energy:
    source: sensor.piscina_energy
    cycle: daily

  piscina_hour_energy:
    source: sensor.piscina_energy
    cycle: hourly

  piscina_today_cost:
    source: sensor.piscina_hour_cost
    cycle: daily

  piscina_month_cost:
    source: sensor.piscina_hour_cost
    cycle: monthly
    offset:
      days: 5
