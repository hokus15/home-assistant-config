binary_sensor:
 - platform: workday
   country: ES
   province: IB

sensor:
  - platform: version

  - platform: websocket_api
  
  - platform: time_date
    display_options:
      - 'time'
      - 'date'
      - 'date_time'
  
  - platform: google_wifi
    monitored_conditions:
      - current_version
      - new_version
      - uptime
      - last_restart
      - status
  
  - platform: rest
    resource: https://api.gdax.com/products/ETH-EUR/ticker
    name: exchange_rate_1_eth
    unit_of_measurement: 'EUR'
    value_template: "{{value_json.price | float | round(2)}}"
    headers:
      User-Agent: Home Assistant
  
  - platform: rest
    resource: https://api.gdax.com/products/BTC-EUR/ticker
    name: exchange_rate_1_btc
    unit_of_measurement: 'EUR'
    value_template: "{{value_json.price | float | round(2)}}"
    headers:
      User-Agent: Home Assistant

  - platform: rest
    resource: https://api.gdax.com/products/BCH-EUR/ticker
    name: exchange_rate_1_bch
    unit_of_measurement: 'EUR'
    value_template: "{{value_json.price | float | round(2)}}"
    headers:
      User-Agent: Home Assistant
  
  - platform: template
    sensors:
      bitcoin_balance:
        friendly_name: 'Saldo Bitcoin'
        icon_template: mdi:bitcoin
        value_template: !secret bitcoin_balance
        unit_of_measurement: 'BTC'
      bitcoin_walet_value: 
        friendly_name: 'Valor cartera Bitcoin'
        icon_template: mdi:currency-eur
        value_template: '{%if states.sensor.ha_runtime_in_minutes.state|float > 2 %}{%if states.sensor.exchange_rate_1_btc is not none %}{{(float(states.sensor.exchange_rate_1_btc.state) * float(states.sensor.bitcoin_balance.state)) | round(2)}}{% endif %}{% else %}Calculando...{% endif %}'
        unit_of_measurement: '€'
      ethereum_balance:
        friendly_name: 'Saldo Ethereum'
        icon_template: mdi:ethereum
        value_template: !secret ethereum_balance
        unit_of_measurement: 'ETH'
      ethereum_walet_value: 
        friendly_name: 'Valor cartera Ethereum'
        icon_template: mdi:currency-eur
        value_template: '{%if states.sensor.ha_runtime_in_minutes.state|float > 2 %}{% if states.sensor.exchange_rate_1_eth is not none %}{{(float(states.sensor.exchange_rate_1_eth.state) * float(states.sensor.ethereum_balance.state)) | round(2)}}{% endif %}{% else %}Calculando...{% endif %}'
        unit_of_measurement: '€'
      bitcoincash_balance:
        friendly_name: 'Saldo Bitcoin cash'
        icon_template: mdi:currency-btc
        value_template: !secret bitcoincash_balance
        unit_of_measurement: 'BCH'
      bitcoincash_walet_value: 
        friendly_name: 'Valor cartera Bitcoincash'
        icon_template: mdi:currency-eur
        value_template: '{%if states.sensor.ha_runtime_in_minutes.state|float > 2 %}{% if states.sensor.exchange_rate_1_bch is not none %}{{(float(states.sensor.exchange_rate_1_bch.state) * float(states.sensor.bitcoincash_balance.state)) | round(2)}}{% endif %}{% else %}Calculando...{% endif %}'
        unit_of_measurement: '€'
  
  #- platform: template
  #  sensors:
  #    hokuslaptop_powerused:
  #      value_template: '{{states.switch.hokuslaptop.attributes.current_power_w | int}}'
  #    ph_piscina:
  #      value_template: '{{states. image_processing.sevensegment_ocr_ph_piscina.state | int / 100}}'
  #      friendly_name: 'pH'
  #      icon_template: mdi:beaker
  
  #- platform: template
  #  sensors:
  #    # Nodon Octan button battery level
  #    recibidor_boton_bateria:
  #      value_template: '{% if states.zwave.nodon_crc3100_octan_remote %}{{ states.zwave.nodon_crc3100_octan_remote.attributes.battery_level }}{% else %}Desconocido{% endif %}'
  #      unit_of_measurement: '%'
  
  - platform: systemmonitor
    resources:
      - type: disk_free
        arg: /
      - type: disk_use
        arg: /share/camera
      - type: memory_free
      - type: processor_use
      - type: last_boot
  
  - platform: template
    sensors:
      hp_photosmart_5520:
        friendly_name: 'HP Photosmart 5520'
        value_template: >-
            {%- if is_state("device_tracker.hp_photosmart_5520", "home") %}
                Encendida
            {% else %}
                Apagada
            {%- endif %}
      ha_runtime_in_minutes:
        value_template: '{{((as_timestamp(now()) - as_timestamp(states.sensor.time_online.state)) / 60)| round }}'

  - platform: mqtt
    name: "Hokuslaptop - Remaining Battery"
    state_topic: "home/hokuslan/hokuslaptop/windows-monitor/stats/battery/remaining-percent"
    unit_of_measurement: '%'
    device_class: battery
    force_update: true
    expire_after: 120
    value_template: "{{ value }}"
    availability_topic: "home/hokuslan/hokuslaptop/lwt"
    payload_available: "ON"
    payload_not_available: "OFF"
    qos: 1

  - platform: mqtt
    name: "Node RED"
    state_topic: "homeassistant/addons/node-red"
    expire_after: 300

  - platform: cert_expiry
    host: !secret cert_expiry_host

  - platform: whois
    domain: !secret domain_name1
    name: Dominio principal
    
  - platform: whois
    domain: !secret domain_name2
    name: Dominio nena
  
  - platform: uptime
    name: "Time Online"

  
  - platform: sql
    db_url: !secret recorder_db_url
    queries:
      - name: DB size
        query: 'SELECT table_schema "database", Round((Sum(data_length + index_length) / 1024) / 1024, 0) "value" FROM information_schema.tables WHERE table_schema="homeassistant" GROUP BY table_schema;'
        column: 'value'
        unit_of_measurement: MiB

input_boolean:
    node_red:
        name: 'node RED Watchdog'
        initial: on

panel_iframe:
  shift_calendar:
    title: 'Turnos Geni'
    icon: mdi:calendar
    url: !secret iframe_shift_calendar_url

shell_command:
  mp4_convert: 'ffmpeg -i {{file}} -c copy {{file[0:file.find(".mkv")]}}.mp4'
  mkv_cleanup: 'find /share/camera/ -type f -name "*.mkv" -mtime +{{age}} -delete'
  mp4_cleanup: 'find /share/camera/ -type f -name "*.mp4" -mtime +{{age}} -delete'
  jpg_cleanup: 'find /share/camera/ -type f -name "*.jpg" -mtime +{{age}} -delete'
  empty_directories_cleanup: 'find /share/camera -depth -exec rmdir {} \; 2> /dev/null'
  version_tojson: 'echo -n "{\"version\": \"" > HA_VERSION.json && cat .HA_VERSION >> HA_VERSION.json && echo -n "\"}" >> HA_VERSION.json'
  