alarm_disarm_telegram:
  alias: "Alarm - Alarm disarm telegram"
  sequence:
    # Alarm disarm
    - service: alarm_control_panel.alarm_disarm
      data:
        entity_id: alarm_control_panel.home
    # Send message
    - service: telegram_bot.send_message
      data_template:
        message: "Alarma desarmada manualmente desde Telegram"
        target:
          - !secret hokusphone_telegram_chat_id
          #- !secret geniphone_telegram_chat_id
        disable_notification: false
        inline_keyboard:
          - "Armar alarma:/alarm_control_panel.alarm_arm_away#alarm_control_panel.home"

alarm_disarm_telegram_temporary:
  alias: "Alarm - Disarm telegram temporary"
  sequence:
    # Alarm disarm
    - service: alarm_control_panel.alarm_disarm
      data:
        entity_id: alarm_control_panel.home
    # Send message
    - service: telegram_bot.send_message
      data_template:
        message: "Alarma desarmada durante {{data.minutes}} minutos desde Telegram"
        target:
          - !secret hokusphone_telegram_chat_id
          #- !secret geniphone_telegram_chat_id
        disable_notification: false
        inline_keyboard:
          - "Armar alarma:/alarm_control_panel.alarm_arm_away#alarm_control_panel.home"
    # Wait specified time before arming the alarm again
    - delay: "{{ data.minutes | multiply(60) | timestamp_custom('%H:%M:%S',False) }}"
    # Only rearm if nobody at home
    - condition: state
      entity_id: group.unidad_familiar
      state: "not_home"
    # Alarm arm away
    - service: alarm_control_panel.alarm_arm_away
      data:
        entity_id: alarm_control_panel.home

alarm_notify_camera:
  alias: "Alarm - Notify camera"
  sequence:
    #    # Send the video to slack
    #    - service: notify.slack
    #      data_template:
    #        message: 'Movimiento detectado en {{data.camera_name}}'
    #        data:
    #          file:
    #            path: '{{data.file}}'
    #
    #    # Notify to slack
    #    - service: notify.slack
    #      data_template:
    #        message: ''
    #        data:
    #          attachments:
    #            - color: 'danger'
    #              pretext: ':bell: *Alarma* :bell:'
    #              text: 'Movimiento detectado en {{data.camera_name}}'
    #              fallback: 'Alarma'
    #            - color: 'danger'
    #              title: '¿Qué quieres hacer?'
    #              callback_id: 'alarma_{{data.camera_name}}'
    #              attachment_type: 'default'
    #              actions:
    #                - name: 'desactivar_{{data.camera_name}}'
    #                  text: 'Desactivar det. mov. {{data.camera_name}}'
    #                  type: 'button'
    #                  value: 'homeassistant.turn_off#{{data.turn_off_entity_id}}'
    #                - name: 'desarmar_alarma'
    #                  text: 'Desarmar alarma'
    #                  type: 'button'
    #                  value: 'script.turn_on#script.alarm_disarm_slack'

    # Continue to notify in telegram only if jpg or mp4 video
    - condition: template
      value_template: '{{ "jpg" in file_path or "mp4" in file_path }}'

    # Notify to telegram
    - service_template: >-
        {%- if "jpg" in file_path -%}
          telegram_bot.send_photo
        {%- elif "mp4" in file_path -%}
          telegram_bot.send_video
        {%- endif -%}

      data_template:
        file: "{{file_path}}"
        caption: "{{message}}"
        target:
          - !secret hokusphone_telegram_chat_id
          #- !secret geniphone_telegram_chat_id
        disable_notification: false
        inline_keyboard:
          - "Desactivar det. mov. {{place}}:/homeassistant.turn_off#{{turn_off_entity_id}}"
          - "Desarmar 30 mins:/30_mins, Desarmar 1 hora:/60_mins"
          - "Desarmar 2 horas:/120_mins, Desarmar 3 horas:/180_mins"
          - "Desarmar alarma:/script.turn_on#script.alarm_disarm_telegram"

alarm_notify_sensor:
  alias: "Alarm - Notify sensor"
  sequence:
    # Send the notification
    - service: telegram_bot.send_message
      data_template:
        message: "{{message}}"
        target:
          - !secret hokusphone_telegram_chat_id
          #- !secret geniphone_telegram_chat_id
        disable_notification: false
        inline_keyboard:
          - "Desactivar sensor:/homeassistant.turn_off#{{turn_off_entity_id}}"
          - "Desarmar 30 mins:/30_mins, Desarmar 1 hora:/60_mins"
          - "Desarmar 2 horas:/120_mins, Desarmar 3 horas:/180_mins"
          - "Desarmar alarma:/script.turn_on#script.alarm_disarm_telegram"

comfort_mode_on:
  alias: "Comfort - Mode on"
  sequence:
    # Set thermostat boost mode
    - service: climate.set_preset_mode
      entity_id: climate.recibidor
      data_template:
        preset_mode: "boost"
    - delay:
        seconds: 15
    # Update entity
    - service: homeassistant.update_entity
      entity_id: climate.recibidor
    - delay:
        minutes: 90
    # Turn off comfort mode (after 90 minutes)
    - service: homeassistant.turn_off
      data:
        entity_id: input_boolean.home_comfort_mode

comfort_mode_off:
  alias: "Comfort - Mode off"
  sequence:
    # Set thermostat Schedule mode
    - service: climate.set_preset_mode
      entity_id: climate.recibidor
      data_template:
        preset_mode: "Schedule"
    - delay:
        seconds: 15
    # Update entity
    - service: homeassistant.update_entity
      entity_id: climate.recibidor

# Called from IFTTT when Geni phone is connected to home WiFi
presence_geniphone_connected_home_wifi:
  alias: "Presence - GeniPhone connected home WiFi"
  sequence:
    - service: mqtt.publish
      data:
        payload: "HokusWiFi"
        retain: true
        topic: "phone/sensor/geni/wifi/ssid"

# Called from IFTTT when Geni phone is disconnected from home WiFi
presence_geniphone_not_connected_home_wifi:
  alias: "Presence - GeniPhone not connected home WiFi"
  sequence:
    - service: mqtt.publish
      data:
        payload: "not_connected"
        retain: true
        topic: "phone/sensor/geni/wifi/ssid"

google_home_good_morning:
  alias: "Google Home - Good morning"
  sequence:
    # Wait until tts finishes
    #    - wait_template: "{{ is_state('media_player.recibidor', 'playing') }}"
    #    - wait_template: "{{ not is_state('media_player.recibidor', 'playing') }}"
    - service: script.turn_on
      data:
        entity_id: script.speech_parte_meteorologico_corto

speech_parte_meteorologico:
  alias: "[Google Home] Parte meteorológico"
  sequence:
    - service: tts.cloud_say
      entity_id: media_player.recibidor
      data_template:
        message: >
          La temperatura exterior es de {{ states("sensor.exterior_temperature") | replace("."," con ") }} grados 
          y una humedad del {{ states("sensor.exterior_humidity") }} %.
          La presión atmosférica es de {{ states("sensor.salon_pressure") | replace("."," con ") }} milibares.
          {%- if states("sensor.pluviometro_rain") == "0" %} No está lloviendo.{% else %} Está lloviendo unos {{ states("sensor.pluviometro_rain") | replace("."," con ") }} litros por metro cuadrado.{% endif %}
          {%- if states("sensor.pluviometro_rain_today") == "0" %} Hoy no ha llovido.{% else %} La lluvia acumulada de hoy es de unos {{ states("sensor.npluviometro_rain_today") | replace("."," con ") }}  litros por metro cuadrado.{% endif %}
        cache: false

speech_parte_meteorologico_corto:
  alias: "[Google Home] Parte meteorológico corto"
  sequence:
    - service: tts.cloud_say
      entity_id: media_player.recibidor
      data_template:
        message: >
          La temperatura exterior es de {{ states("sensor.exterior_temperature") | replace("."," con ") }} grados.
        cache: false

chores:
  alias: "[Google Home] Quien saca la basura"
  sequence:
    - service: tts.cloud_say
      entity_id: media_player.recibidor
      data_template:
        message: >
          {% if now().strftime('%a') != "Sat" %}
            {{['La suerte está echada.',
               'Déjame pensar.',
               'Creo que',
               'He decidido que',
               'Yo diría que',
               'Si la memoria no me falla.',
               'Si no voy mal,',
               'Espera que lo consulto.',
               'Según mis cálculos',
               'Lula me ha dicho que',
               'Si no voy mal',
               'Espera que piense.']|random}} hoy le toca a {% if now().strftime('%j')|int % 2 != 0 %}Carlos{% else %}Jorge{% endif %} sacar {{ {"Sun": "la basura orgánica", "Mon": "los envases y el papel", "Tue": "la basura orgánica", "Wed": "los restos y vídrio", "Thu": "la basura orgánica", "Fri": "los envases", "Sat": "no hay que sacar basura"}[now().strftime('%a')] }}.
          {% else %}
            Hoy estáis de suerte, no hay que sacar la basura
          {% endif %}

goto_sleep:
  alias: "[Google Home] Me voy dormir"
  sequence:
    - event: sleep_mode
      event_data:
        state: "on"

presence_leave_home:
  alias: "[Google Home] Me voy de casa"
  sequence:
    - delay:
        seconds: 5
    - service: tts.cloud_say
      entity_id: media_player.recibidor
      data_template:
        message: >
          {% set incidence = false %}
          {%- if is_state("binary_sensor.porche_sensor_puerta", "on") %}{% set incidence = true %}Puerta de la cocina abierta. {% endif %}
          {%- if is_state("binary_sensor.porche_sensor_persiana", "on") %}{% set incidence = true %}Persiana de la cocina abierta. {% endif %}
          {%- if is_state("binary_sensor.coladuria_sensor_puerta", "on") %}{% set incidence = true %}Puerta de la coladuría abierta. {% endif %}
          {%- if is_state("binary_sensor.banyo_suite_sensor_ventana", "on") %}{% set incidence = true %}Ventana del baño de la suite abierta. {% endif %}
          {%- if is_state("binary_sensor.suite_sensor_ventana", "on") %}{% set incidence = true %}Ventana de la suite abierta. {% endif %}
          {%- if is_state("switch.entrance_hall_lamp_switch", "on") %}{% set incidence = true %}Lámpara del recibidor encendida. {% endif %}
          {%- if is_state("switch.escalera_switch", "on") %}{% set incidence = true %}Luz de la escalera encendida. {% endif %}
          {%- if is_state("switch.comedor_switch", "on") %}{% set incidence = true %}Luz del comedor encendida. {% endif %}
          {%- if is_state("switch.salon_switch", "on") %}{% set incidence = true %}Luz del salón encendida. {% endif %}
          {%- if is_state("switch.suite_switch", "on") %}{% set incidence = true %}Luz de la suite encendida. {% endif %}
          {%- if incidence == false %}¡Todo correcto!, podéis ir en paz. {% endif %}
